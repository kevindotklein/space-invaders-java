import java.awt.Color;
import java.awt.Graphics;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.TimeUnit;

public class Alien {
	
	private int x,y,width,height, velocity, direction;
	private boolean allow;
	
	public Alien(int x0, int y0, int direction) {
		this.x = x0;
		this.y = y0;
		this.width = 40;
		this.height = 40;
		this.velocity = 1;
		this.direction = direction;
		this.allow = false;
	}
	
	public void update() {
		x += velocity * direction;
		if(allow == true) {
			y++;
			CompletableFuture.delayedExecutor(1, TimeUnit.SECONDS).execute(() -> {
				allow = false;
			});
		}
	}
	
	public void render(Graphics g) {
		g.setColor(Color.orange);
		g.fillRect(x, y, width, height);
	}
	
	public void toggleDirection() {
		direction *= -1;
		allow = true;
	}

	public int getX() {
		return x;
	}

	public void setX(int x) {
		this.x = x;
	}

	public int getY() {
		return y;
	}

	public void setY(int y) {
		this.y = y;
	}

	public int getDirection() {
		return direction;
	}

	public void setDirection(int direction) {
		this.direction = direction;
	}

	public int getWidth() {
		return width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	public int getHeight() {
		return height;
	}

	public void setHeight(int height) {
		this.height = height;
	}

	public int getVelocity() {
		return velocity;
	}

	public void setVelocity(int velocity) {
		this.velocity = velocity;
	}
	
	
}
